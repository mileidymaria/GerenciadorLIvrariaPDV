-- MySQL Script generated by MySQL Workbench
-- Thu May  6 22:42:52 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema livraria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema livraria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `livraria` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema bd_biblioteca
-- -----------------------------------------------------
USE `livraria` ;

-- -----------------------------------------------------
-- Table `tb_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_endereco (
  `rua` VARCHAR(40) NOT NULL,
  `bairro` VARCHAR(45) NOT NULL,
  `cidade` VARCHAR(45) NOT NULL,
  `estado` VARCHAR(25) NOT NULL,
  `cep` VARCHAR(9) NOT NULL,
  `numero` INT NULL,
  `id_endereco` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id_endereco`)
);



-- -----------------------------------------------------
-- Table `livraria`.`tb_cliente_fisico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_cliente_fisico (
  `nome` VARCHAR(200) NOT NULL,
  `data_de_nascimento` DATE,
  `cpf` VARCHAR(16) NOT NULL,
  `celular` VARCHAR(14) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `cliente_desde` DATE NULL,
  `id_endereco` INT NOT NULL,
  `id_cliente_fisico` INT NOT NULL AUTO_INCREMENT,
  `status` TINYINT NOT NULL,
  PRIMARY KEY (`id_cliente_fisico`),
  CONSTRAINT `fk_tb_cliente_fisico_tb_endereco`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `tb_endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table `livraria`.`tb_cliente_juridico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_cliente_juridico (
  `razao_social` VARCHAR(100) NOT NULL,
  `data_criacao` DATE,
  `cnpj` VARCHAR(30) NOT NULL,
  `telefone` VARCHAR(14) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `cliente_desde` DATE NULL,
  `id_cliente_juridico` INT NOT NULL AUTO_INCREMENT,
  `id_endereco` INT NOT NULL,
  `status` TINYINT NOT NULL,
  PRIMARY KEY (`id_cliente_juridico`),
  CONSTRAINT `fk_tb_cliente_juridico_tb_endereco1`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `tb_endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `livraria`.`tb_funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_funcionario (
  `nome` VARCHAR(100) NOT NULL,
  `cpf` VARCHAR(16) NOT NULL,
  `celular` VARCHAR(14) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(8) NOT NULL,
  `cargo` VARCHAR(13) NOT NULL,
  `data_de_nascimento` DATE,
  `id_tb_funcionario` INT NOT NULL AUTO_INCREMENT,
  `funcionario_desde` DATE NULL,
  `id_endereco` INT NOT NULL,
  `status` TINYINT NOT NULL,
  PRIMARY KEY (`id_tb_funcionario`),
  CONSTRAINT `fk_tb_funcionario_tb_endereco1`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `tb_endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table `livraria`.`tb_fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_fornecedor (
  `nome` VARCHAR(150) NOT NULL,
  `cpf` VARCHAR(16) NULL,
  `cnpj` VARCHAR(25) NULL,
  `email` VARCHAR(45) NOT NULL,
  `telefone` VARCHAR(14) NOT NULL,
  `data_criacao` DATE NULL,
  `id_fornecedor` INT NOT NULL AUTO_INCREMENT,
  `id_endereco` INT NOT NULL,
  `fornecedor_desde` DATE NOT NULL,
  `status` TINYINT NOT NULL,
  PRIMARY KEY (`id_fornecedor`),
  CONSTRAINT `fk_tb_fornecedor_tb_endereco1`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `tb_endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- Table `livraria`.`tb_livro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_livro (
  `descricao` VARCHAR(1000) NOT NULL,
  `titulo` VARCHAR(45) NOT NULL,
  `quantidade_estoque` INT NOT NULL,
  `quantidade_paginas` INT NOT NULL,
  `preco` DOUBLE NULL,
  `isbn` VARCHAR(45) NULL,
  `editora` VARCHAR(45) NULL,
  `categoria` VARCHAR(15) NULL,
  `id_fornecedor` INT NOT NULL,
  `id_livro` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id_livro`),
  CONSTRAINT `fk_tb_fornecedor_tb_livro1`
    FOREIGN KEY (`id_fornecedor`)
    REFERENCES `tb_fornecedor` (`id_fornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table `tb_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_pedido (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `id_cliente_juridico` INT,
  `id_cliente_fisico` INT,
  `id_funcionario` INT NOT NULL,
  `forma_pagamento` VARCHAR(9) NOT NULL,
  `data` DATE,
  `total` DOUBLE,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `fk_tb_pedido_tb_cliente_juridico1`
    FOREIGN KEY (`id_cliente_juridico`)
    REFERENCES `tb_cliente_juridico` (`id_cliente_juridico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_pedido_tb_cliente_fisico1`
    FOREIGN KEY (`id_cliente_fisico`)
    REFERENCES `tb_cliente_fisico` (`id_cliente_fisico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_pedido_tb_funcionario1`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `tb_funcionario` (`id_tb_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `tb_item_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_item_pedido (
  `id_pedido` INT NOT NULL,
  `id_livro` INT NOT NULL,
  `quantidade` INT NOT NULL,
  CONSTRAINT `fk_tb_pedido_has_tb_livro_tb_pedido1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `tb_pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_pedido_has_tb_livro_tb_livro1`
    FOREIGN KEY (`id_livro`)
    REFERENCES `tb_livro` (`id_livro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `livraria`.`tb_historico_pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_historico_pedidos (
  `id_historico` INT NOT NULL AUTO_INCREMENT,
  `cliente` VARCHAR(45) NOT NULL,
  `funcionario` VARCHAR(45) NOT NULL,
  `total` DOUBLE NULL,
  `operacao` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`id_historico`));


-- -----------------------------------------------------
-- Table `livraria`.`tb_historico_itens_pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_historico_itens_pedidos (
  `id_historico` INT NOT NULL AUTO_INCREMENT,
  `quantidade` INT NOT NULL,
  `titulo` VARCHAR(45) NOT NULL,
  `preco` DOUBLE NOT NULL,
  `id_pedido` INT NOT NULL,
  `operacao` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`id_historico`)
  );


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- testes

-- endereços
insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('nulo', 'nulo', 'nulo', 'nulo', 'nulo', 0);

insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('Rua Aurora', 'Alto Maron', 'Vitória da Conquista', 'Bahia', '45005-572', 25);

insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('Rua Aurora', 'Alto Maron', 'Vitória da Conquista', 'Bahia', '45005-572', 25);

insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('Avenida Couto Magalhães', 'Grande Terceiro', 'Cuiabá', 'Mato Grosso', '78065-730', 5);

insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('Beco Comandante Norberto Won Gal', 'Redenção', 'Manaus', 'Amapá', '69047-099', 74);

insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('Rua Rodolpho Buzinaro', 'Córrego Rico', 'Jaboticabal', 'São Paulo', '14896-013', 11);

insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('Travessa Brasília', 'Brasília (Outeiro)', 'Belém', 'Pará', '66845-200', 82);

insert into tb_endereco(rua, bairro, cidade, estado, cep, numero) values
('Rua Guilhermina Florença da Silva', 'Serrotão', 'Campina Grande', 'Paraíba', '58436-175', 11);

-- clientes fisicos
insert into tb_cliente_fisico (nome, data_de_nascimento, cpf, celular, email, cliente_desde, id_endereco, status)
values ('nulo', null, 'nulo', 'nulo', 'nulo', 'nulo', 1, false);

insert into tb_cliente_fisico (nome, data_de_nascimento, cpf, celular, email, cliente_desde, id_endereco, status)
values ('Maria Clara', '2001-03-02', '136.654.987-70', '(22)98754-6543','mariaclara@gmail.com', now(), 1, true);

insert into tb_cliente_fisico (nome, data_de_nascimento, cpf, celular, email, cliente_desde, id_endereco, status)
values ('Mileidy Maria Ribeiro', '1999-11-27', '136.654.987-70', '(22)99711-2112','mileidymaria01@gmail.com', now(), 2, true);

-- cliente juridicos
insert into tb_cliente_juridico (razao_social, data_criacao, cnpj, telefone, email, cliente_desde, id_endereco, status)
values ('nulo', null, 'nulo', 'nulo', 'nulo', 'nulo', 1, false);

insert into tb_cliente_juridico (razao_social, data_criacao, cnpj, telefone, email, cliente_desde, id_endereco, status)
values ('Intrínseca LTDA', '1998-06-25', '05.660.045/0001-06', '(11)2365-9654', 'intrinseca@intrinseca.com', now(),
3, true);

insert into tb_cliente_juridico (razao_social, data_criacao, cnpj, telefone, email, cliente_desde, id_endereco, status)
values ('Arqueiro LTDA', '1998-06-25', '06.985.027/0005-90', '(11)2365-9654', 'arqueiro@arqueiro.com', now(),
4, true);

-- fornecedores
insert into tb_fornecedor (nome, cpf, cnpj, data_criacao, email, telefone, id_endereco, fornecedor_desde, status) values
('Distribuidora Follower', null, '37.794.768/0001-94', "1999-02-21", 'followr@follower.com', '(22)9874-5687', 5, now(), true);

insert into tb_fornecedor (nome, cpf, cnpj, email, telefone, id_endereco, fornecedor_desde, status) values
('Distribuidora Guarani', null, '16.711.870/0001-09', 'guarani@guarani.com', '(22)9887-5687', 5, now(), true);

-- funcionarios

insert into tb_funcionario (nome, cpf, celular, email, senha, data_de_nascimento, cargo, funcionario_desde, id_endereco, status) values
('Julia Souza', '132.654.987-78', '(22)98745-2236', "juliasouza@gmail.com",'12345678', "2000-02-19",'ADMINISTRADOR',now(), 6, true);

-- livro

insert into tb_livro (descricao, titulo, quantidade_estoque, quantidade_paginas, preco, isbn, editora, categoria,
id_fornecedor) values ("descricao", "Desafio Infinito", 36, 386, 57.56, "8583682860", "Panini", "HQ", 1);

insert into tb_livro (descricao, titulo, quantidade_estoque, quantidade_paginas, preco, isbn, editora, categoria,
id_fornecedor) values ("descricao", "Cruzada Infinita", 17, 477, 98.65, "8583682860", "Panini", "HQ", 1);

insert into tb_livro (descricao, titulo, quantidade_estoque, quantidade_paginas, preco, isbn, editora, categoria,
id_fornecedor) values ("descricao", "Guerra Infinita", 87, 254, 140.56, "8583682860", "Panini", "HQ", 1);

insert into tb_livro (descricao, titulo, quantidade_estoque, quantidade_paginas, preco, isbn, editora, categoria,
id_fornecedor) values ("descricao", "Um amor pra recordar", 36, 386, 17.56, "8583682860", "Novo Conceito", "Romance", 1);

insert into tb_livro (descricao, titulo, quantidade_estoque, quantidade_paginas, preco, isbn, editora, categoria,
id_fornecedor) values ("descricao", "Homem de Ferro Vírus", 16, 586, 127.56, "8583682860", "Panini", "HQ", 1);

-- pedidos

insert into tb_pedido (id_cliente_juridico, id_cliente_fisico, id_funcionario, data, forma_pagamento, total) values
(null, 1,1, now(),'CRÉDITO', 270.11);

-- itens do pedido

insert into tb_item_pedido (id_pedido, id_livro, quantidade) values (1,1,25);

-- trigger decrementar do estoque no momento da venda
 